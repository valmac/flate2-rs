var searchIndex = JSON.parse('{\
"flate2":{"doc":"A DEFLATE-based stream compression/decompression library","i":[[3,"Crc","flate2","The CRC calculated by a `CrcReader`.",null,null],[3,"CrcReader","","A wrapper around a `Read` that calculates the CRC.",null,null],[3,"CrcWriter","","A wrapper around a `Write` that calculates the CRC.",null,null],[3,"GzBuilder","","A builder structure to create a new gzip Encoder.",null,null],[3,"GzHeader","","A structure representing the header of a gzip stream.",null,null],[3,"Compress","","Raw in-memory compression stream for blocks of data.",null,null],[3,"CompressError","","Error returned when a compression object is used…",null,null],[3,"Decompress","","Raw in-memory decompression stream for blocks of data.",null,null],[3,"DecompressError","","Error returned when a decompression object finds that the…",null,null],[3,"Compression","","When compressing data, the compression level can be…",null,null],[4,"Status","","Possible status results of compressing some data or…",null,null],[13,"Ok","","Indicates success.",0,null],[13,"BufError","","Indicates that forward progress is not possible due to…",0,null],[13,"StreamEnd","","Indicates that all input has been consumed and all output…",0,null],[4,"FlushCompress","","Values which indicate the form of flushing to be used when…",null,null],[13,"None","","A typical parameter for passing to…",1,null],[13,"Sync","","All pending output is flushed to the output buffer and the…",1,null],[13,"Partial","","All pending output is flushed to the output buffer, but…",1,null],[13,"Full","","All output is flushed as with `Flush::Sync` and the…",1,null],[13,"Finish","","Pending input is processed and pending output is flushed.",1,null],[4,"FlushDecompress","","Values which indicate the form of flushing to be used when…",null,null],[13,"None","","A typical parameter for passing to…",2,null],[13,"Sync","","All pending output is flushed to the output buffer and the…",2,null],[13,"Finish","","Pending input is processed and pending output is flushed.",2,null],[11,"new","","Create a new CRC.",3,[[],["crc",3]]],[11,"sum","","Returns the current crc32 checksum.",3,[[]]],[11,"amount","","The number of bytes that have been used to calculate the…",3,[[]]],[11,"update","","Update the CRC with the bytes in `data`.",3,[[]]],[11,"reset","","Reset the CRC.",3,[[]]],[11,"combine","","Combine the CRC with the CRC for the subsequent block of…",3,[[["crc",3]]]],[11,"new","","Create a new CrcReader.",4,[[],["crcreader",3]]],[11,"crc","","Get the Crc for this CrcReader.",4,[[],["crc",3]]],[11,"into_inner","","Get the reader that is wrapped by this CrcReader.",4,[[]]],[11,"get_ref","","Get the reader that is wrapped by this CrcReader by…",4,[[]]],[11,"get_mut","","Get a mutable reference to the reader that is wrapped by…",4,[[]]],[11,"reset","","Reset the Crc in this CrcReader.",4,[[]]],[11,"crc","","Get the Crc for this CrcWriter.",5,[[],["crc",3]]],[11,"into_inner","","Get the writer that is wrapped by this CrcWriter.",5,[[]]],[11,"get_ref","","Get the writer that is wrapped by this CrcWriter by…",5,[[]]],[11,"get_mut","","Get a mutable reference to the writer that is wrapped by…",5,[[]]],[11,"reset","","Reset the Crc in this CrcWriter.",5,[[]]],[11,"new","","Create a new CrcWriter.",5,[[],["crcwriter",3]]],[11,"filename","","Returns the `filename` field of this gzip stream\'s header,…",6,[[],["option",4]]],[11,"extra","","Returns the `extra` field of this gzip stream\'s header, if…",6,[[],["option",4]]],[11,"comment","","Returns the `comment` field of this gzip stream\'s header,…",6,[[],["option",4]]],[11,"operating_system","","Returns the `operating_system` field of this gzip stream\'s…",6,[[]]],[11,"mtime","","This gives the most recent modification time of the…",6,[[]]],[11,"mtime_as_datetime","","Returns the most recent modification time represented by a…",6,[[],[["systemtime",3],["option",4]]]],[11,"new","","Create a new blank builder with no header by default.",7,[[],["gzbuilder",3]]],[11,"mtime","","Configure the `mtime` field in the gzip header.",7,[[],["gzbuilder",3]]],[11,"operating_system","","Configure the `operating_system` field in the gzip header.",7,[[],["gzbuilder",3]]],[11,"extra","","Configure the `extra` field in the gzip header.",7,[[["vec",3],["into",8]],["gzbuilder",3]]],[11,"filename","","Configure the `filename` field in the gzip header.",7,[[["vec",3],["into",8]],["gzbuilder",3]]],[11,"comment","","Configure the `comment` field in the gzip header.",7,[[["vec",3],["into",8]],["gzbuilder",3]]],[11,"write","","Consume this builder, creating a writer encoder in the…",7,[[["compression",3],["write",8]],[["gzencoder",3],["write",8]]]],[11,"read","","Consume this builder, creating a reader encoder in the…",7,[[["read",8],["compression",3]],[["read",8],["gzencoder",3]]]],[11,"buf_read","","Consume this builder, creating a reader encoder in the…",7,[[["compression",3]],["gzencoder",3]]],[11,"needs_dictionary","","Indicates whether decompression failed due to requiring a…",8,[[],["option",4]]],[11,"new","","Creates a new object ready for compressing data that it\'s…",9,[[["compression",3]],["compress",3]]],[11,"new_with_window_bits","","Creates a new object ready for compressing data that it\'s…",9,[[["compression",3]],["compress",3]]],[11,"new_gzip","","Creates a new object ready for compressing data that it\'s…",9,[[["compression",3]],["compress",3]]],[11,"total_in","","Returns the total number of input bytes which have been…",9,[[]]],[11,"total_out","","Returns the total number of output bytes which have been…",9,[[]]],[11,"set_dictionary","","Specifies the compression dictionary to use.",9,[[],[["result",4],["compresserror",3]]]],[11,"reset","","Quickly resets this compressor without having to…",9,[[]]],[11,"set_level","","Dynamically updates the compression level.",9,[[["compression",3]],[["compresserror",3],["result",4]]]],[11,"compress","","Compresses the input data into the output, consuming only…",9,[[["flushcompress",4]],[["compresserror",3],["status",4],["result",4]]]],[11,"compress_vec","","Compresses the input data into the extra space of the…",9,[[["vec",3],["flushcompress",4]],[["compresserror",3],["status",4],["result",4]]]],[11,"new","","Creates a new object ready for decompressing data that…",10,[[],["decompress",3]]],[11,"new_with_window_bits","","Creates a new object ready for decompressing data that…",10,[[],["decompress",3]]],[11,"new_gzip","","Creates a new object ready for decompressing data that…",10,[[],["decompress",3]]],[11,"total_in","","Returns the total number of input bytes which have been…",10,[[]]],[11,"total_out","","Returns the total number of output bytes which have been…",10,[[]]],[11,"decompress","","Decompresses the input data into the output, consuming…",10,[[["flushdecompress",4]],[["result",4],["status",4],["decompresserror",3]]]],[11,"decompress_vec","","Decompresses the input data into the extra space in the…",10,[[["vec",3],["flushdecompress",4]],[["result",4],["status",4],["decompresserror",3]]]],[11,"set_dictionary","","Specifies the decompression dictionary to use.",10,[[],[["result",4],["decompresserror",3]]]],[11,"reset","","Performs the equivalent of replacing this decompression…",10,[[]]],[0,"read","","Types which operate over `Read` streams, both encoders and…",null,null],[3,"DeflateDecoder","flate2::read","A DEFLATE decoder, or decompressor.",null,null],[3,"DeflateEncoder","","A DEFLATE encoder, or compressor.",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a…",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[0,"write","flate2","Types which operate over `Write` streams, both encoders…",null,null],[3,"DeflateDecoder","flate2::write","A DEFLATE decoder, or decompressor.",null,null],[3,"DeflateEncoder","","A DEFLATE encoder, or compressor.",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[0,"bufread","flate2","Types which operate over `BufRead` streams, both encoders…",null,null],[3,"DeflateDecoder","flate2::bufread","A DEFLATE decoder, or decompressor.",null,null],[3,"DeflateEncoder","","A DEFLATE encoder, or compressor.",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a…",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[11,"new","flate2","Creates a new description of the compression level with an…",11,[[],["compression",3]]],[11,"none","","No compression is to be performed, this may actually…",11,[[],["compression",3]]],[11,"fast","","Optimize for the best speed of encoding.",11,[[],["compression",3]]],[11,"best","","Optimize for the size of data being encoded.",11,[[],["compression",3]]],[11,"level","","Returns an integer representing the compression level,…",11,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","flate2::bufread","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","flate2::read","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","flate2::write","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","flate2::bufread","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","flate2::read","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","flate2::write","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","flate2::bufread","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","flate2::read","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","flate2::write","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"drop","","",25,[[]]],[11,"clone","flate2","",6,[[],["gzheader",3]]],[11,"clone","","",1,[[],["flushcompress",4]]],[11,"clone","","",2,[[],["flushdecompress",4]]],[11,"clone","","",0,[[],["status",4]]],[11,"clone","","",11,[[],["compression",3]]],[11,"default","","",6,[[],["gzheader",3]]],[11,"default","","",11,[[],["compression",3]]],[11,"eq","","",6,[[["gzheader",3]]]],[11,"ne","","",6,[[["gzheader",3]]]],[11,"eq","","",1,[[["flushcompress",4]]]],[11,"eq","","",2,[[["flushdecompress",4]]]],[11,"eq","","",0,[[["status",4]]]],[11,"eq","","",11,[[["compression",3]]]],[11,"ne","","",11,[[["compression",3]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::bufread","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::read","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::write","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::bufread","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::read","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::write","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","flate2","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::bufread","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::read","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::write","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","flate2","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fill_buf","","",4,[[],["result",6]]],[11,"consume","","",4,[[]]],[11,"read","","",4,[[],["result",6]]],[11,"read","flate2::bufread","",13,[[],["result",6]]],[11,"read","","",14,[[],["result",6]]],[11,"read","flate2::read","",15,[[],["result",6]]],[11,"read","","",16,[[],["result",6]]],[11,"read","flate2::write","",17,[[],["result",6]]],[11,"read","","",18,[[],["result",6]]],[11,"read","flate2::bufread","",19,[[],["result",6]]],[11,"read","","",20,[[],["result",6]]],[11,"read","","",21,[[],["result",6]]],[11,"read","flate2::read","",22,[[],["result",6]]],[11,"read","","",23,[[],["result",6]]],[11,"read","","",24,[[],["result",6]]],[11,"read","flate2::write","",25,[[],["result",6]]],[11,"read","","",26,[[],["result",6]]],[11,"read","flate2::bufread","",27,[[],["result",6]]],[11,"read","","",28,[[],["result",6]]],[11,"read","flate2::read","",29,[[],["result",6]]],[11,"read","","",30,[[],["result",6]]],[11,"read","flate2::write","",31,[[],["result",6]]],[11,"read","","",32,[[],["result",6]]],[11,"write","flate2","",5,[[],["result",6]]],[11,"flush","","",5,[[],["result",6]]],[11,"write","flate2::bufread","",13,[[],["result",6]]],[11,"flush","","",13,[[],["result",6]]],[11,"write","","",14,[[],["result",6]]],[11,"flush","","",14,[[],["result",6]]],[11,"write","flate2::read","",15,[[],["result",6]]],[11,"flush","","",15,[[],["result",6]]],[11,"write","","",16,[[],["result",6]]],[11,"flush","","",16,[[],["result",6]]],[11,"write","flate2::write","",17,[[],["result",6]]],[11,"flush","","",17,[[],["result",6]]],[11,"write","","",18,[[],["result",6]]],[11,"flush","","",18,[[],["result",6]]],[11,"write","flate2::bufread","",19,[[],["result",6]]],[11,"flush","","",19,[[],["result",6]]],[11,"write","","",20,[[],["result",6]]],[11,"flush","","",20,[[],["result",6]]],[11,"write","","",21,[[],["result",6]]],[11,"flush","","",21,[[],["result",6]]],[11,"write","flate2::read","",22,[[],["result",6]]],[11,"flush","","",22,[[],["result",6]]],[11,"write","","",23,[[],["result",6]]],[11,"flush","","",23,[[],["result",6]]],[11,"write","","",24,[[],["result",6]]],[11,"flush","","",24,[[],["result",6]]],[11,"write","flate2::write","",25,[[],["result",6]]],[11,"flush","","",25,[[],["result",6]]],[11,"write","","",26,[[],["result",6]]],[11,"flush","","",26,[[],["result",6]]],[11,"write","flate2::bufread","",27,[[],["result",6]]],[11,"flush","","",27,[[],["result",6]]],[11,"write","","",28,[[],["result",6]]],[11,"flush","","",28,[[],["result",6]]],[11,"write","flate2::read","",29,[[],["result",6]]],[11,"flush","","",29,[[],["result",6]]],[11,"write","","",30,[[],["result",6]]],[11,"flush","","",30,[[],["result",6]]],[11,"write","flate2::write","",31,[[],["result",6]]],[11,"flush","","",31,[[],["result",6]]],[11,"write","","",32,[[],["result",6]]],[11,"flush","","",32,[[],["result",6]]],[11,"shutdown","flate2::bufread","",13,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",14,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::read","",15,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",16,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::write","",17,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",18,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::bufread","",20,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",21,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::read","",23,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",24,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::write","",25,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",26,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::bufread","",27,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",28,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::read","",29,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",30,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::write","",31,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",32,[[],[["poll",6],["error",3]]]],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data…",13,[[["compression",3]],["deflateencoder",3]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",13,[[]]],[11,"get_ref","","Acquires a reference to the underlying reader",13,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",13,[[]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",13,[[]]],[11,"total_in","","Returns the number of bytes that have been read into this…",13,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has…",13,[[]]],[11,"new","","Creates a new decoder which will decompress data read from…",14,[[],["deflatedecoder",3]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",14,[[]]],[11,"reset_data","","Resets the state of this decoder\'s data",14,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream",14,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",14,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",14,[[]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",14,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",14,[[]]],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data…",15,[[["compression",3]],["deflateencoder",3]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",15,[[]]],[11,"get_ref","","Acquires a reference to the underlying reader",15,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",15,[[]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",15,[[]]],[11,"total_in","","Returns the number of bytes that have been read into this…",15,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has…",15,[[]]],[11,"new","","Creates a new decoder which will decompress data read from…",16,[[],["deflatedecoder",3]]],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is…",16,[[["vec",3]],["deflatedecoder",3]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",16,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream",16,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",16,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",16,[[]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",16,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",16,[[]]],[11,"new","flate2::write","Creates a new encoder which will write compressed data to…",17,[[["compression",3]],["deflateencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",17,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",17,[[]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",17,[[],["result",6]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",17,[[],["result",6]]],[11,"finish","","Consumes this encoder, flushing the output stream.",17,[[],["result",6]]],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",17,[[],["result",6]]],[11,"total_in","","Returns the number of bytes that have been written to this…",17,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has…",17,[[]]],[11,"new","","Creates a new decoder which will write uncompressed data…",18,[[],["deflatedecoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",18,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",18,[[]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",18,[[],["result",6]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",18,[[],["result",6]]],[11,"finish","","Consumes this encoder, flushing the output stream.",18,[[],["result",6]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",18,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",18,[[]]],[11,"new","flate2::bufread","Creates a new encoder which will use the given compression…",19,[[["compression",3]],["gzencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying reader.",19,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",19,[[]]],[11,"into_inner","","Returns the underlying stream, consuming this encoder",19,[[]]],[11,"new","","Creates a new decoder from the given reader, immediately…",20,[[],["gzdecoder",3]]],[11,"header","","Returns the header associated with this stream, if it was…",20,[[],[["gzheader",3],["option",4]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",20,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",20,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",20,[[]]],[11,"new","","Creates a new decoder from the given reader, immediately…",21,[[],["multigzdecoder",3]]],[11,"header","","Returns the current header associated with this stream, if…",21,[[],[["gzheader",3],["option",4]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",21,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",21,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",21,[[]]],[11,"new","flate2::read","Creates a new encoder which will use the given compression…",22,[[["compression",3]],["gzencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying reader.",22,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",22,[[]]],[11,"into_inner","","Returns the underlying stream, consuming this encoder",22,[[]]],[11,"new","","Creates a new decoder from the given reader, immediately…",23,[[],["gzdecoder",3]]],[11,"header","","Returns the header associated with this stream, if it was…",23,[[],[["gzheader",3],["option",4]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",23,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",23,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",23,[[]]],[11,"new","","Creates a new decoder from the given reader, immediately…",24,[[],["multigzdecoder",3]]],[11,"header","","Returns the current header associated with this stream, if…",24,[[],[["gzheader",3],["option",4]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",24,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",24,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",24,[[]]],[11,"new","flate2::write","Creates a new encoder which will use the given compression…",25,[[["compression",3]],["gzencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",25,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",25,[[]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",25,[[],["result",6]]],[11,"finish","","Finish encoding this stream, returning the underlying…",25,[[],["result",6]]],[11,"new","","Creates a new decoder which will write uncompressed data…",26,[[],["gzdecoder",3]]],[11,"header","","Returns the header associated with this stream.",26,[[],[["gzheader",3],["option",4]]]],[11,"get_ref","","Acquires a reference to the underlying writer.",26,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",26,[[]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",26,[[],["result",6]]],[11,"finish","","Consumes this decoder, flushing the output stream.",26,[[],["result",6]]],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data…",27,[[["compression",3]],["zlibencoder",3]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",27,[[]]],[11,"get_ref","","Acquires a reference to the underlying reader",27,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",27,[[]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",27,[[]]],[11,"total_in","","Returns the number of bytes that have been read into this…",27,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has…",27,[[]]],[11,"new","","Creates a new decoder which will decompress data read from…",28,[[],["zlibdecoder",3]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",28,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream",28,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",28,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",28,[[]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",28,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",28,[[]]],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data…",29,[[["compression",3]],["zlibencoder",3]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",29,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream",29,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",29,[[]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",29,[[]]],[11,"total_in","","Returns the number of bytes that have been read into this…",29,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has…",29,[[]]],[11,"new","","Creates a new decoder which will decompress data read from…",30,[[],["zlibdecoder",3]]],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is…",30,[[["vec",3]],["zlibdecoder",3]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",30,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream",30,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",30,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",30,[[]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",30,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",30,[[]]],[11,"new","flate2::write","Creates a new encoder which will write compressed data to…",31,[[["compression",3]],["zlibencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",31,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",31,[[]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",31,[[],["result",6]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",31,[[],["result",6]]],[11,"finish","","Consumes this encoder, flushing the output stream.",31,[[],["result",6]]],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",31,[[],["result",6]]],[11,"total_in","","Returns the number of bytes that have been written to this…",31,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has…",31,[[]]],[11,"new","","Creates a new decoder which will write uncompressed data…",32,[[],["zlibdecoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",32,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",32,[[]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",32,[[],["result",6]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",32,[[],["result",6]]],[11,"finish","","Consumes this encoder, flushing the output stream.",32,[[],["result",6]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",32,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",32,[[]]]],"p":[[4,"Status"],[4,"FlushCompress"],[4,"FlushDecompress"],[3,"Crc"],[3,"CrcReader"],[3,"CrcWriter"],[3,"GzHeader"],[3,"GzBuilder"],[3,"DecompressError"],[3,"Compress"],[3,"Decompress"],[3,"Compression"],[3,"CompressError"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);